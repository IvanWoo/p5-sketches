import type { Sketch } from "./api";

import { idgen } from "@thi.ng/idgen";
import { Z3 } from "@thi.ng/strings";
import { comp, map, multiplexObj, push, transduce } from "@thi.ng/transducers";
import { writeFileSync } from "fs";

import { initConfig, CONFIG } from "./config";
import { thumb } from "./partials/asset";
import { table } from "./partials/table";

try {
    initConfig("./tools/config.json");

    const counter = idgen(8);
    const sketches = transduce(
        comp(
            multiplexObj({
                id: map(() => Z3(counter.next() + 1)),
                name: map(
                    (x: Sketch) => `[${x.name}](./src/sketches/${x.name}.ts)`
                ),
                screenshot: map((x: Sketch) =>
                    x.screenshot ? thumb(x.screenshot) : ""
                ),
                description: map((x: Sketch) => x.description || "TODO"),
                reference: map((x: Sketch) => x.reference || ""),
            })
        ),
        push<Sketch>(),
        CONFIG.sketches
    );

    const BODY = `<!-- This file is autogenerated - DO NOT EDIT! -->
# personal p5 sketches

This repo contains a growing number (currently ${sketches.length}) of sketches

${table(
    ["#", "Screenshot", "Name", "Description", "Reference"],
    ["id", "screenshot", "name", "description", "reference"],
    sketches
)}
`;

    writeFileSync("./README-SKETCHES.md", BODY);
} catch (e) {
    console.log(e.message);
    process.exit(1);
}
